[{"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/index.js":"1","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/01_basic/apps.jsx":"2","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/theme.js":"3","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/Youtube/01_Paper/apps.jsx":"4","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/Youtube/02_darkMode/apps.jsx":"5","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/Youtube/03_grid/01_basic.jsx":"6","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/Youtube/03_grid/styleGrid.js":"7","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/componentA.jsx":"8","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/style.js":"9","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/costumizeComponentA.jsx":"10","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/accordion.jsx":"11","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/alert.jsx":"12","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/appBar.jsx":"13","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/autoComplete.jsx":"14"},{"size":560,"mtime":1611932556725,"results":"15","hashOfConfig":"16"},{"size":968,"mtime":1611745678762,"results":"17","hashOfConfig":"16"},{"size":410,"mtime":1611849400410,"results":"18","hashOfConfig":"16"},{"size":863,"mtime":1611848827635,"results":"19","hashOfConfig":"16"},{"size":1474,"mtime":1611855093082,"results":"20","hashOfConfig":"16"},{"size":1325,"mtime":1611908637248,"results":"21","hashOfConfig":"16"},{"size":463,"mtime":1611908577880,"results":"22","hashOfConfig":"16"},{"size":472,"mtime":1612082541660,"results":"23","hashOfConfig":"16"},{"size":2233,"mtime":1612078977968,"results":"24","hashOfConfig":"16"},{"size":1167,"mtime":1611935954390,"results":"25","hashOfConfig":"16"},{"size":7672,"mtime":1612082694104,"results":"26","hashOfConfig":"16"},{"size":4643,"mtime":1611938665842,"results":"27","hashOfConfig":"16"},{"size":9090,"mtime":1612081915463,"results":"28","hashOfConfig":"16"},{"size":14053,"mtime":1612112382590,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1z08mj7",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/index.js",["65","66","67","68"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Basic from './01_basic/apps';\nimport { ThemeProvider } from '@material-ui/core';\nimport theme from './theme';\nimport Papers from './Youtube/01_Paper/apps';\nimport DarkModes from './Youtube/02_darkMode/apps';\nimport Grid01 from './Youtube/03_grid/01_basic';\nimport ComponentA from './ComponentMUI/ComponentA/componentA';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {console.log(theme)}\n    <ComponentA />\n  </ThemeProvider>,\n  document.getElementById('root')\n);",["69","70"],"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/01_basic/apps.jsx",["71"],"import React, {Fragment, useState} from 'react';\nimport { makeStyles, Typography, useTheme } from '@material-ui/core';\n\nconst StylesOffice = makeStyles(theme => ({\n   oneStyle : {\n      width:'100px',\n      height:'100px',\n      background : (props) => theme.palette.primary.main\n   },\n   twoStyle : (props) => {\n      return {\n         color : props ? theme.palette.secondary.main : 'red',\n         [theme.breakpoints.up('sm')] : {\n            background : 'blue'\n         }\n      }\n   }\n}))\n\nfunction Basic() {\n   const [state, seState] = useState(false);\n   const themes = useTheme();\n   const myStyle = StylesOffice(state);\n\n   return(\n      <Fragment>\n         <h1 className={myStyle.twoStyle}>hello</h1>\n         <div className={myStyle.oneStyle} warnaku='primary'></div>\n         <button onClick={() => seState(!state)}>click</button>\n         <Typography variant='h3' color='secondary'>My typography</Typography>\n      </Fragment>\n   )\n}\n\nexport default Basic;","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/theme.js",["72"],"import { createMuiTheme, useTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[300],\n    },\n    secondary: {\n      main: green['A700'],\n    },\n  },\n  typography : {\n    h1 : {\n      fontWeight : 700\n    }\n  }\n});\n\nexport default theme;","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/Youtube/01_Paper/apps.jsx",[],"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/Youtube/02_darkMode/apps.jsx",["73","74","75"],"import { makeStyles, Paper, Typography, DialogContentText, Switch, ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { green, purple } from '@material-ui/core/colors';\nimport { dark } from '@material-ui/core/styles/createPalette';\nimport React, { Fragment, useState } from 'react';\nimport theme from '../../theme';\n\nconst UseStyle = makeStyles((theme) => ({\n   paperContainer : {\n      width:'40%',\n      padding : '30px',\n      margin:'auto',\n      marginTop : '30px'\n   },\n   typographyText : {\n      fontSize : '3em',\n   }\n}))\n\nconst DarkMode = createMuiTheme({\n   palette: {\n     type: \"dark\",\n     primary: {\n      main: green[200],\n    },\n   }\n});\n\nfunction DarkModes() {\n   const styles = UseStyle();\n   const [darkMode, setDarkMode] = useState(false);\n\n   console.log(DarkMode);\n\n   return(\n      <ThemeProvider theme={darkMode ? DarkMode : theme}>\n         <Paper elevation={5} className={styles.paperContainer}>\n            <Typography \n               variant='h1' \n               align='center' \n               className={styles.typographyText}\n               color='primary'\n            >Switch between themes\n            </Typography>\n            <DialogContentText align='center'>\n               Tap on the switch to see some magic happen!\n            </DialogContentText>\n            <Switch color='primary' checked={darkMode} onChange={() => setDarkMode(!darkMode)} />\n         </Paper>\n      </ThemeProvider>\n   )\n}\n\nexport default DarkModes;","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/Youtube/03_grid/01_basic.jsx",[],"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/Youtube/03_grid/styleGrid.js",[],"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/componentA.jsx",["76"],"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/style.js",[],"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/costumizeComponentA.jsx",["77"],"import MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core';\n\n// --------- Accordion Costumize --------- //\n\nexport const AccordionCostumize = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nexport const AccordionSummaryCostumize = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiAccordionSummary);\n\nexport const AccordionDetailsCostumize = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiAccordionDetails);","/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/accordion.jsx",["78"],"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/alert.jsx",[],"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/appBar.jsx",[],"/Volumes/DATA/BasicDeveloper/Advance/Framework/ReactJS/material-ui/src/ComponentMUI/ComponentA/autoComplete.jsx",["79","80","81"],"import { Grid, Typography, TextField, Chip } from '@material-ui/core';\nimport React, { Fragment } from 'react';\nimport {Autocomplete, createFilterOptions} from '@material-ui/lab';\nimport {UseStyleA} from './style';\n\nconst filter = createFilterOptions();\n\nfunction AutoCompleteComponent() {\n   const styleA = UseStyleA();\n   const [inputValue, setInputValue] = React.useState('');\n   const [inputValue2, setInputValue2] = React.useState('');\n   const [value, setValue] = React.useState(top100Films[0]);\n   const [searchData, setSearchData] = React.useState('');\n\n   return(\n      <>\n         <Grid container justify='center' className={styleA.rootA} spacing={5}>\n            <Grid xs={12} item style={{textAlign:'center'}}>\n               <Typography variant='h3'>AutoComplete</Typography>\n            </Grid>\n            <Grid xs={12} item container justify='center' spacing={1}>\n               {/*  ----- Type 1 ----- */}\n               <Grid item xs={12} style={{textAlign:'center'}}>\n                  <Typography variant='h6'>Type 1</Typography>\n               </Grid>\n               <Grid>\n                  <Autocomplete\n                     id=\"combo-box-demo\"\n                     options={top100Films}\n                     getOptionLabel={(option) => option.judul}\n                     style={{ width: 300 }}\n                     debug\n                     renderInput={(params) => {\n                        return <TextField {...params} label=\"Combo box\" variant=\"outlined\" />\n                     }}\n                  />\n               </Grid>\n               {/*  ----- Type 2 ----- */}\n               <Grid item xs={12} style={{textAlign:'center'}}>\n                  <Typography variant='h6'>Type 2</Typography>\n               </Grid>\n               <Grid>\n                  <Autocomplete\n                     id=\"Country\"\n                     options={top100Films}\n                     getOptionLabel={(option) => option.judul}\n                     style={{ width: 300 }}\n                     renderOption={(option) => (\n                        <React.Fragment>\n                          <span>{option.judul} - {option.year}</span>\n                        </React.Fragment>\n                      )}\n                     renderInput={(params) => {\n                        return <TextField {...params} label=\"Country\" variant=\"outlined\" />\n                     }}\n                  />\n               </Grid>\n               {/*  ----- Type 3 ----- */}\n               <Grid item xs={12} style={{textAlign:'center'}}>\n                  <Typography variant='h6'>Type 3</Typography>\n               </Grid>\n               <Grid>\n                  <Autocomplete\n                     id=\"Country\"\n                     options={top100Films}\n                     getOptionLabel={(option) => option.judul}\n                     style={{ width: 300 }}\n                     inputValue={inputValue}\n                     onInputChange={(event, newInputValue) => {\n                        setInputValue(newInputValue);\n                     }}\n                     value={value}\n                     onChange={(event, newValue) => {\n                        setValue(newValue);\n                     }}\n                     renderOption={(option) => (\n                        <React.Fragment>\n                          <span>{option.judul} - {option.year}</span>\n                        </React.Fragment>\n                      )}\n                     renderInput={(params) => {\n                        return <TextField {...params} label=\"Country\" variant=\"outlined\" />\n                     }}\n                  />\n               </Grid>\n               <Typography variant='h4'>inputValue - {inputValue}</Typography>\n               <Typography variant='h4'>Value - {value !== null && value.judul}</Typography>\n                {/*  ----- Type 4 Search No option ----- */}\n                <Grid item xs={12} style={{textAlign:'center'}}>\n                  <Typography variant='h6'>Type 4</Typography>\n               </Grid>\n               <Grid>\n                  <Autocomplete\n                     id=\"Country\"\n                     options={top100Films}\n                     getOptionLabel={(option) => option.judul}\n                     style={{ width: 300 }}\n                     inputValue={inputValue2}\n                     onInputChange={(event, newInputValue) => {\n                        setInputValue2(newInputValue);\n                     }}\n                     renderOption={(option) => (\n                        <React.Fragment>\n                          <span>{option.judul} - {option.year}</span>\n                        </React.Fragment>\n                      )}\n                     renderInput={(params) => {\n                        return <TextField {...params} label=\"Country\" variant=\"outlined\" />\n                     }}\n                  />\n               </Grid>\n               {/*  ----- Type 5 Search same google ----- */}\n               <Grid item xs={12} style={{textAlign:'center'}}>\n                  <Typography variant='h6'>Type 4</Typography>\n               </Grid>\n               <Grid>\n                  <Autocomplete\n                     value={value}\n                     onChange={(event, newValue) => { // 4\n                        // ini untuk enter\n                        if (typeof newValue === 'string') {\n                         setValue({\n                           judul: newValue,\n                         });\n                       } else if (newValue && newValue.inputValue) {\n                         // Create a new value from the user input, tapi tidak enter\n                         setValue({\n                           judul: newValue.inputValue,\n                         });\n                       } else {\n                        //  tidak enter\n                         setValue(newValue);\n                       }\n                     }}\n                     filterOptions={(options, params) => {    // 1\n                        const filtered = filter(options, params);\n                        \n                        // Suggest the creation of a new value\n                        if (params.inputValue !== '') {\n                           filtered.push({\n                              inputValue: params.inputValue,\n                              judul : `Add \"${params.inputValue}\"`,\n                           });\n                       }\n               \n                       return filtered;\n                     }}\n                     id=\"free-solo-with-text-demo\"\n                     options={top100Films}\n                     getOptionLabel={(option) => {  // 2\n                        // Value selected with enter, right from the input\n                        if (typeof option === 'string') {\n                           return option;\n                        }\n                       // Add \"xxx\" option created dynamically\n                       if (option.inputValue) {\n                         return option.inputValue;  // ini buat merender data input dari value\n                        }\n                       // Regular option\n                       return option.judul;  // jika ada datanya, ini buat merender data yang sudah ada\n                     }}\n                     renderOption={(option) => { // 3\n                        return option.judul; // ini buat nampilin data 'ADD value' yang ada di input \n                     }}\n                     freeSolo\n                     style={{ width: 300 }}\n                     renderInput={(params) => {\n                        return <TextField {...params} label='Search Name' variant='outlined'/>\n                     }}\n                  />\n               </Grid>\n               {/*  ----- Type 5 Search same google ----- */}\n               <Grid item xs={12} style={{textAlign:'center'}}>\n                  <Typography variant='h6'>Type 5</Typography>\n               </Grid>\n               <Grid>\n                  <Autocomplete\n                     style={{width:300}}\n                     options={berita}\n                     multiple\n                     disableCloseOnSelect\n                     getOptionLabel={(option) => {\n                        return `${option.id + ' ' +option.newsHot}`\n                     }}\n                     renderOption={(option) => (\n                        <React.Fragment>\n                          <span>{option.id} - {option.newsHot}</span>\n                        </React.Fragment>\n                      )}\n                     renderInput={(params) => {\n                        return( \n                        <div ref={params.InputProps.ref}>\n                           {console.log(params)}\n                           <input type='text'  {...params.inputProps}/>\n                        </div>)\n                     }}\n                  />\n               </Grid>\n            </Grid>  \n         </Grid>  \n      </>\n   )\n}\n\nconst top100Films = [\n   { judul: 'The Shawshank Redemption', year: 1994 },\n   { judul: 'The Godfather', year: 1972 },\n   { judul: 'The Godfather: Part II', year: 1974 },\n   { judul: 'The Dark Knight', year: 2008 },\n   { judul: '12 Angry Men', year: 1957 },\n   { judul: \"Schindler's List\", year: 1993 },\n   { judul: 'Pulp Fiction', year: 1994 },\n   { judul: 'The Lord of the Rings: The Return of the King', year: 2003 },\n   { judul: 'The Good, the Bad and the Ugly', year: 1966 },\n   { judul: 'Fight Club', year: 1999 },\n   { judul: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n   { judul: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n   { judul: 'Forrest Gump', year: 1994 },\n   { judul: 'Inception', year: 2010 },\n   { judul: 'The Lord of the Rings: The Two Towers', year: 2002 },\n   { judul: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n   { judul: 'Goodfellas', year: 1990 },\n   { judul: 'The Matrix', year: 1999 },\n   { judul: 'Seven Samurai', year: 1954 },\n   { judul: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n   { judul: 'City of God', year: 2002 },\n   { judul: 'Se7en', year: 1995 },\n   { judul: 'The Silence of the Lambs', year: 1991 },\n   { judul: \"It's a Wonderful Life\", year: 1946 },\n   { judul: 'Life Is Beautiful', year: 1997 },\n   { judul: 'The Usual Suspects', year: 1995 },\n   { judul: 'Léon: The Professional', year: 1994 },\n   { judul: 'Spirited Away', year: 2001 },\n   { judul: 'Saving Private Ryan', year: 1998 },\n   { judul: 'Once Upon a Time in the West', year: 1968 },\n   { judul: 'American History X', year: 1998 },\n   { judul: 'Interstellar', year: 2014 },\n   { judul: 'Casablanca', year: 1942 },\n   { judul: 'City Lights', year: 1931 },\n   { judul: 'Psycho', year: 1960 },\n   { judul: 'The Green Mile', year: 1999 },\n   { judul: 'The Intouchables', year: 2011 },\n   { judul: 'Modern Times', year: 1936 },\n   { judul: 'Raiders of the Lost Ark', year: 1981 },\n   { judul: 'Rear Window', year: 1954 },\n   { judul: 'The Pianist', year: 2002 },\n   { judul: 'The Departed', year: 2006 },\n   { judul: 'Terminator 2: Judgment Day', year: 1991 },\n   { judul: 'Back to the Future', year: 1985 },\n   { judul: 'Whiplash', year: 2014 },\n   { judul: 'Gladiator', year: 2000 },\n   { judul: 'Memento', year: 2000 },\n   { judul: 'The Prestige', year: 2006 },\n   { judul: 'The Lion King', year: 1994 },\n   { judul: 'Apocalypse Now', year: 1979 },\n   { judul: 'Alien', year: 1979 },\n   { judul: 'Sunset Boulevard', year: 1950 },\n   { judul: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n   { judul: 'The Great Dictator', year: 1940 },\n   { judul: 'Cinema Paradiso', year: 1988 },\n   { judul: 'The Lives of Others', year: 2006 },\n   { judul: 'Grave of the Fireflies', year: 1988 },\n   { judul: 'Paths of Glory', year: 1957 },\n   { judul: 'Django Unchained', year: 2012 },\n   { judul: 'The Shining', year: 1980 },\n   { judul: 'WALL·E', year: 2008 },\n   { judul: 'American Beauty', year: 1999 },\n   { judul: 'The Dark Knight Rises', year: 2012 },\n   { judul: 'Princess Mononoke', year: 1997 },\n   { judul: 'Aliens', year: 1986 },\n   { judul: 'Oldboy', year: 2003 },\n   { judul: 'Once Upon a Time in America', year: 1984 },\n   { judul: 'Witness for the Prosecution', year: 1957 },\n   { judul: 'Das Boot', year: 1981 },\n   { judul: 'Citizen Kane', year: 1941 },\n   { judul: 'North by Northwest', year: 1959 },\n   { judul: 'Vertigo', year: 1958 },\n   { judul: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n   { judul: 'Reservoir Dogs', year: 1992 },\n   { judul: 'Braveheart', year: 1995 },\n   { judul: 'M', year: 1931 },\n   { judul: 'Requiem for a Dream', year: 2000 },\n   { judul: 'Amélie', year: 2001 },\n   { judul: 'A Clockwork Orange', year: 1971 },\n   { judul: 'Like Stars on Earth', year: 2007 },\n   { judul: 'Taxi Driver', year: 1976 },\n   { judul: 'Lawrence of Arabia', year: 1962 },\n   { judul: 'Double Indemnity', year: 1944 },\n   { judul: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n   { judul: 'Amadeus', year: 1984 },\n   { judul: 'To Kill a Mockingbird', year: 1962 },\n   { judul: 'Toy Story 3', year: 2010 },\n   { judul: 'Logan', year: 2017 },\n   { judul: 'Full Metal Jacket', year: 1987 },\n   { judul: 'Dangal', year: 2016 },\n   { judul: 'The Sting', year: 1973 },\n   { judul: '2001: A Space Odyssey', year: 1968 },\n   { judul: \"Singin' in the Rain\", year: 1952 },\n   { judul: 'Toy Story', year: 1995 },\n   { judul: 'Bicycle Thieves', year: 1948 },\n   { judul: 'The Kid', year: 1921 },\n   { judul: 'Inglourious Basterds', year: 2009 },\n   { judul: 'Snatch', year: 2000 },\n   { judul: '3 Idiots', year: 2009 },\n   { judul: 'Monty Python and the Holy Grail', year: 1975 },\n ];\n\n const berita = [\n    {\n       id : 1,\n       newsHot : 'loremdiuwahduiwahudiaiw dhiwoahidoa hdwa',\n       newsMedium : 'dahwuidhwuaiduiqq'\n    },\n    {\n      id : 2,\n      newsHot : 'loremdiuwahduiwahudiaiw dhiwoahidoa hdwa',\n      newsMedium : 'dahwuidhwuaiduiqq'\n   },\n   {\n      id : 3,\n      newsHot : 'loremdiuwahduiwahudiaiw dhiwoahidoa hdwa',\n      newsMedium : 'dahwuidhwuaiduiqq'\n   },\n ]\n\nexport default AutoCompleteComponent;",{"ruleId":"82","severity":1,"message":"83","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":13},{"ruleId":"82","severity":1,"message":"86","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":14},{"ruleId":"82","severity":1,"message":"87","line":8,"column":8,"nodeType":"84","messageId":"85","endLine":8,"endColumn":17},{"ruleId":"82","severity":1,"message":"88","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":14},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"82","severity":1,"message":"93","line":22,"column":10,"nodeType":"84","messageId":"85","endLine":22,"endColumn":16},{"ruleId":"82","severity":1,"message":"94","line":1,"column":26,"nodeType":"84","messageId":"85","endLine":1,"endColumn":34},{"ruleId":"82","severity":1,"message":"95","line":2,"column":17,"nodeType":"84","messageId":"85","endLine":2,"endColumn":23},{"ruleId":"82","severity":1,"message":"96","line":3,"column":10,"nodeType":"84","messageId":"85","endLine":3,"endColumn":14},{"ruleId":"82","severity":1,"message":"97","line":4,"column":17,"nodeType":"84","messageId":"85","endLine":4,"endColumn":25},{"ruleId":"82","severity":1,"message":"98","line":2,"column":20,"nodeType":"84","messageId":"85","endLine":2,"endColumn":28},{"ruleId":"82","severity":1,"message":"99","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":18},{"ruleId":"82","severity":1,"message":"100","line":4,"column":63,"nodeType":"84","messageId":"85","endLine":4,"endColumn":68},{"ruleId":"82","severity":1,"message":"101","line":1,"column":39,"nodeType":"84","messageId":"85","endLine":1,"endColumn":43},{"ruleId":"82","severity":1,"message":"102","line":13,"column":11,"nodeType":"84","messageId":"85","endLine":13,"endColumn":21},{"ruleId":"82","severity":1,"message":"103","line":13,"column":23,"nodeType":"84","messageId":"85","endLine":13,"endColumn":36},"no-unused-vars","'Basic' is defined but never used.","Identifier","unusedVar","'Papers' is defined but never used.","'DarkModes' is defined but never used.","'Grid01' is defined but never used.","no-native-reassign",["104"],"no-negated-in-lhs",["105"],"'themes' is assigned a value but never used.","'useTheme' is defined but never used.","'purple' is defined but never used.","'dark' is defined but never used.","'Fragment' is defined but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","'Badge' is defined but never used.","'Chip' is defined but never used.","'searchData' is assigned a value but never used.","'setSearchData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]